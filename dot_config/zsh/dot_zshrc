# autoload -U compinit -d $XDG_CACHE_HOME/.zcompdump && compinit -d $XDG_CACHE_HOME/.zcompdump
fpath=(~/.local/completions $fpath)
autoload -Uz compinit && compinit

zstyle ':completion:*' menu select

setopt complete_aliases
setopt complete_in_word
setopt glob_complete
# Using the AUTOCD option, you can simply type the name of a directory, and it will become the current directory.
setopt AUTO_CD

setopt EXTENDED_HISTORY
# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY

export HISTFILE="$ZDOTDIR/.zhistory"    # History filepath
export HISTSIZE=10000                   # Maximum events for internal history
export SAVEHIST=10000                   # Maximum events in history file

typeset -U path PATH
path=($HOME/.local/bin $path)
path=($path $HOME/bin)
export PATH

export CDPATH=".:$HOME"

# Do not show PWD after change of path 'via' CDPATH
alias cd='>/dev/null cd'

distro=$(lsb_release -si) 

if [[ ! $commands[broot] ]]; then
    echo "trying to install broot" 
    if [[ -z "${distro}" ]]; then
        echo "do nothing because lsb_release is not installed"
    elif [[ $distro == "Arch" || $distro == "EndeavourOS" ]]; then
        sudo paru -S broot
    elif [[ $distro == "Fedora" ]]; then
        sudo dnf install broot
    else
        curl -sS https://dystroy.org/broot/download/x86_64-linux/broot --output ~/.local/bin/broot
        chmod +x ~/.local/bin/broot
    fi
    
    broot --install
fi

if [[ ! $commands[nvim] ]]; then
    echo "trying to install neovim" 
    if [[ -z "${distro}" ]]; then
        echo "do nothing because lsb_release is not installed"
    elif [[ $distro == "Arch" || $distro == "EndeavourOS" ]]; then
        echo "Installing neovim via paru"
        sudo paru -S neovim 
    elif [[ $distro == "Fedora" ]]; then
        sudo dnf install neovim
    elif [[ $distro == "Ubuntu" ]]; then
        sudo apt install neovim
    else
        curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
        chmod u+x nvim.appimage\
        sudo mv nvim.appimage $HOME/.local/bin/nvim
    fi
fi

# Use antigen to install plugins
export ADOTDIR="$XDG_CONFIG_HOME/antigen"

if [[ ! -f $ADOTDIR/antigen.zsh ]]; then
    curl -L git.io/antigen > $ADOTDIR/antigen.zsh
fi

if [[ -f $ADOTDIR/antigen.zsh ]]; then
    typeset -a ANTIGEN_CHECK_FILES=($ADOTDIR/antigenrc $ZDOTDIR/.zshrc)
    source $ADOTDIR/antigen.zsh
    antigen init $ADOTDIR/antigenrc
fi

export ZSH_CUSTOM_INCLUDES="${ZDOTDIR}/includes"

if [[ -d "$ZSH_CUSTOM_INCLUDES" ]]; then
    for file in "$ZSH_CUSTOM_INCLUDES"/.*.zsh; do
        source "$file"
    done
fi

# set vs code as default terminal editor
#export EDITOR="code -w"

# set vim as default terminal editor
if [[ $commands[nvim] ]]; then
    export EDITOR="nvim"
elif [[ $commands[vim] ]]; then
    export EDITOR="vim"
elif [[ $commands[code] ]]; then
    export EDITOR="code -w"
elif [[ $commands[vi] ]]; then
    export EDITOR="vi"
fi

source $XDG_CONFIG_HOME/broot/launcher/bash/br

############################################################
export STARSHIP_CONFIG=$XDG_CONFIG_HOME/starship/starship.toml

### install starship if not exist
if (( !$+commands[starship] )); then
  curl -sS https://starship.rs/install.sh | sh
fi

eval "$(starship init zsh)"
